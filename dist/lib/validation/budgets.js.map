{"version":3,"sources":["../../../lib/validation/budgets.js"],"names":["validateBudgets","data","supplierData","JSON","parse","result","finalObject","request","map","row","Promise","resolve","reject","year","errorID","errorField","errorReason","isNaN","month","day","hour","dimensions","metrics","push","all","module","exports"],"mappings":"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","file":"budgets.js","sourcesContent":["/* eslint-disable valid-jsdoc */\n'use strict';\n\n/**\n * @author Dave Grix\n * @param data string\n * @return array\n */\nconst validateBudgets = async(data) => {\n\n  const supplierData = JSON.parse(data);\n  let result = {};\n  let finalObject = [];\n\n  let request = supplierData.map((row) => {\n    return new Promise((resolve, reject) => {\n\n      /**\n         * @param row object\n         * @param row.year number required\n         * @param row.month number required\n         * @param row.day number\n         * @param row.hour number\n         * @param row.dimensions object\n         * @param row.metrics object\n         */\n\n      if (!row.year) {\n        result.errorID = '';\n        result.errorField = 'year';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n        if (isNaN(row.year)) {\n          result.errorID = '';\n          result.errorField = 'year';\n          result.errorReason = 'Not a Number!';\n          reject(result);\n        }\n      }\n\n      if (!row.month) {\n        result.errorID = '';\n        result.errorField = 'month';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n        if (isNaN(row.month)) {\n          result.errorID = '';\n          result.errorField = 'month';\n          result.errorReason = 'Not a Number!';\n          reject(result);\n        }\n      }\n\n\n      if (row.day) {\n        if (isNaN(row.day)) {\n          result.errorID = row.year + ' ' + row.month;\n          result.errorField = 'day';\n          result.errorReason = 'Not a Number!';\n          reject(result);\n        }\n      } else {\n        row.day = 0;\n      }\n\n\n      if (row.hour) {\n        if (isNaN(row.hour)) {\n          result.errorID = row.year + ' ' + row.month;\n          result.errorField = 'hour';\n          result.errorReason = 'Not a Number!';\n          reject(result);\n        }\n      } else {\n        row.hour = 0;\n      }\n\n      if (row.dimensions) {\n        if (typeof row.dimensions !== 'object') {\n          result.errorID = row.year + ' ' + row.month;\n          result.errorField = 'dimensions';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.dimensions = {};\n      }\n\n      if (row.metrics) {\n        if (typeof row.metrics !== 'object') {\n          result.errorID = row.year + ' ' + row.month;\n          result.errorField = 'metrics';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.metrics = {};\n      }\n\n\n      finalObject.push(row);\n      resolve(row);\n    });\n  });\n\n\n  return await Promise.all(request);\n\n}\n;\n\nmodule.exports = {\n  validateBudgets\n};\n\n"]}