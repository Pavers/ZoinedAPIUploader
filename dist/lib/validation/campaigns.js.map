{"version":3,"sources":["../../../lib/validation/campaigns.js"],"names":["validateCampaign","data","supplierData","JSON","parse","result","finalObject","dateRegex","request","map","row","Promise","resolve","reject","campaign_id","errorID","errorField","errorReason","campaign_name","start_date","match","end_date","organisation_id","source_system","supplier_id","push","all","module","exports"],"mappings":"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","file":"campaigns.js","sourcesContent":["/* eslint-disable valid-jsdoc */\n'use strict';\n\n/**\n * @author Dave Grix\n * @param data string\n * @return array\n */\nconst validateCampaign = async(data) => {\n\n  const supplierData = JSON.parse(data);\n  let result = {};\n  let finalObject = [];\n\n  const dateRegex = '/^\\d{4}-\\d{2}-\\d{2}$/';\n\n  let request = supplierData.map((row) => {\n    return new Promise((resolve, reject) => {\n\n      /**\n       * @param row object\n       * @param row.campaign_id string required\n       * @param row.campaign_name string required\n       * @param row.start_date string required (yyyy-mm-dd)\n       * @param row.end_date string required (yyyy-mm-dd)\n       * @param row.organisation_id string\n       * @param row.source_system string\n       */\n\n      if (!row.campaign_id) {\n        result.errorID = '';\n        result.errorField = 'campaign_id';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n\n        if (typeof row.campaign_id !== 'string') {\n          result.errorID = '';\n          result.errorField = 'campaign_id';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      }\n\n\n      if (!row.campaign_name) {\n        result.errorID = row.campaign_id;\n        result.errorField = 'campaign_name';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n\n        if (typeof row.campaign_name !== 'string') {\n          result.errorID = row.campaign_id;\n          result.errorField = 'campaign_name';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      }\n\n\n      if (!row.start_date) {\n        result.errorID = row.campaign_id;\n        result.errorField = 'start_date';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n        if (typeof row.start_date !== 'string') {\n          result.errorID = row.campaign_id;\n          result.errorField = 'start_date';\n          result.errorReason = 'Not a String';\n          reject(result);\n        } else if (!row.start_date.match(dateRegex)) {\n          result.errorID = row.campaign_id;\n          result.errorField = 'start_date';\n          result.errorReason = 'Not in correct format of YYYY-mm-dd';\n          reject(result);\n        }\n      }\n\n\n      if (!row.end_date) {\n        result.errorID = row.campaign_id;\n        result.errorField = 'end_date';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n        if (typeof row.end_date !== 'string') {\n          result.errorID = row.campaign_id;\n          result.errorField = 'end_date';\n          result.errorReason = 'Not a String';\n          reject(result);\n        } else if (!row.end_date.match(dateRegex)) {\n          result.errorID = row.campaign_id;\n          result.errorField = 'end_date';\n          result.errorReason = 'Not in correct format of YYYY-mm-dd';\n          reject(result);\n        }\n      }\n\n\n      if (row.organisation_id) {\n        if (typeof row.organisation_id !== 'string') {\n          result.errorID = row.campaign_id;\n          result.errorField = 'organisation_id';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.organisation_id = '';\n      }\n\n      if (row.source_system) {\n        if (typeof row.source_system !== 'string') {\n          result.errorID = row.supplier_id;\n          result.errorField = 'source_system';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.source_system = '';\n      }\n\n\n      finalObject.push(row);\n      resolve(row);\n    });\n  });\n\n  return await Promise.all(request);\n\n};\n\nmodule.exports = {\n  validateCampaign\n};\n\n"]}