{"version":3,"sources":["../../../lib/validation/visitors.js"],"names":["validateVisitors","data","supplierData","JSON","parse","result","finalObject","dateRegex","timeRegex","request","map","row","Promise","resolve","reject","organisation_id","errorID","errorField","errorReason","counter_id","source_system","visitor_id","date","match","time","visit_type","vehicle_type","visitors","isNaN","push","all","module","exports"],"mappings":"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","file":"visitors.js","sourcesContent":["/* eslint-disable valid-jsdoc */\n'use strict';\n\n/**\n * @author Dave Grix\n * @param data string\n * @return array\n */\nconst validateVisitors = async(data) => {\n\n  const supplierData = JSON.parse(data);\n  let result = {};\n  let finalObject = [];\n\n  const dateRegex = '/^\\d{4}-\\d{2}-\\d{2}$/';\n  const timeRegex = '/^\\d{2}:\\d{2}:\\d{2}$/';\n\n  let request = supplierData.map((row) => {\n    return new Promise((resolve, reject) => {\n\n      /**\n       * @param row object\n       * @param row.organisation_id string required\n       * @param row.department_id string\n       * @param row.counter_id string\n       * @param row.visitor_id string\n       * @param row.date string required (yyyy-mm-dd)\n       * @param row.time string required (hh:mm:ss)\n       * @param row.visit_type string\n       * @param row.vehicle_type string\n       * @param row.visitors number required\n       * @param row.source_system string\n       */\n\n      if (!row.organisation_id) {\n        result.errorID = '';\n        result.errorField = 'organisation_id';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n\n        if (typeof row.organisation_id !== 'string') {\n          result.errorID = '';\n          result.errorField = 'organisation_id';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      }\n\n\n      if (row.counter_id) {\n        if (typeof row.source_system !== 'string') {\n          result.errorID = row.organisation_id;\n          result.errorField = 'counter_id';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.counter_id = '';\n      }\n\n      if (row.visitor_id) {\n        if (typeof row.source_system !== 'string') {\n          result.errorID = row.organisation_id;\n          result.errorField = 'visitor_id';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.visitor_id = '';\n      }\n\n      if (!row.date) {\n        result.errorID = row.organisation_id;\n        result.errorField = 'date';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n        if (typeof row.date !== 'string') {\n          result.errorID = row.organisation_id;\n          result.errorField = 'date';\n          result.errorReason = 'Not a String';\n          reject(result);\n        } else if (!row.date.match(dateRegex)) {\n          result.errorID = row.organisation_id;\n          result.errorField = 'start_date';\n          result.errorReason = 'Not in correct format of YYYY-mm-dd';\n          reject(result);\n        }\n      }\n\n      if (!row.time) {\n        result.errorID = row.organisation_id;\n        result.errorField = 'time';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n        if (typeof row.time !== 'string') {\n          result.errorID = row.organisation_id;\n          result.errorField = 'time';\n          result.errorReason = 'Not a String';\n          reject(result);\n        } else if (!row.time.match(timeRegex)) {\n          result.errorID = row.organisation_id;\n          result.errorField = 'time';\n          result.errorReason = 'Not in correct format of hh:mm:ss';\n          reject(result);\n        }\n      }\n\n      if (row.visit_type) {\n        if (typeof row.visit_type !== 'string') {\n          result.errorID = row.organisation_id;\n          result.errorField = 'visit_type';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.visit_type = '';\n      }\n\n      if (row.vehicle_type) {\n        if (typeof row.vehicle_type !== 'string') {\n          result.errorID = row.organisation_id;\n          result.errorField = 'vehicle_type';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.vehicle_type = '';\n      }\n\n\n      if (!row.visitors) {\n        result.errorID = row.organisation_id;\n        result.errorField = 'visitors';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n\n        if (isNaN(row.visitors)) {\n          result.errorID = row.organisation_id;\n          result.errorField = 'visitors';\n          result.errorReason = 'Not a Number!';\n          reject(result);\n        }\n      }\n\n      if (row.source_system) {\n        if (typeof row.source_system !== 'string') {\n          result.errorID = row.organisation_id;\n          result.errorField = 'source_system';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.source_system = '';\n      }\n\n      finalObject.push(row);\n      resolve(row);\n    });\n  });\n\n  return await Promise.all(request);\n\n};\n\nmodule.exports = {\n  validateVisitors\n};\n\n"]}