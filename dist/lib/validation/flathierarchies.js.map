{"version":3,"sources":["../../../lib/validation/flathierarchies.js"],"names":["validateFlatHierarchies","data","supplierData","JSON","parse","result","finalObject","request","map","row","Promise","resolve","reject","hierarchy_key","errorID","entity_id","errorField","errorReason","level_1","level_2","level_3","level_4","level_5","source_system","push","all","module","exports"],"mappings":"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","file":"flathierarchies.js","sourcesContent":["/* eslint-disable valid-jsdoc */\n'use strict';\n\n/**\n * @author Dave Grix\n * @param data string\n * @return array\n */\nconst validateFlatHierarchies = async(data) => {\n\n  const supplierData = JSON.parse(data);\n  let result = {};\n  let finalObject = [];\n\n  // Required key\n  // product\n  // organisation\n  // customer\n  // channel\n  // area\n\n\n  let request = supplierData.map((row) => {\n    return new Promise((resolve, reject) => {\n\n      /**\n       * @param row object\n       * @param row.hierarchy_key string required (see required key)\n       * @param row.entity_id string required\n       * @param row.level_1 string required\n       * @param row.level_2 string\n       * @param row.level_3 string\n       * @param row.level_4 string\n       * @param row.level_5 string\n       * @param row.source_system string\n       */\n\n\n      if (!row.hierarchy_key) {\n        result.errorID = row.entity_id;\n        result.errorField = 'hierarchy_key';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n\n        if (row.hierarchy_key !== 'product' ||\n            row.hierarchy_key !== 'organisation' ||\n            row.hierarchy_key !== 'customer' ||\n            row.hierarchy_key !== 'channel' ||\n            row.hierarchy_key !== 'area') {\n          result.errorID = row.entity_id;\n        }\n        result.errorField = 'hierarchy_key';\n        result.errorReason = 'Hierarchy key must be one of product, organisation, customer, channel or area';\n        reject(result);\n      }\n\n      if (!row.level_1) {\n        result.errorID = row.entity_id;\n        result.errorField = 'level_1';\n        result.errorReason = 'Missing Required Property';\n        reject(result);\n      } else {\n\n        if (typeof row.level_1 !== 'string') {\n          result.errorID = row.entity_id;\n          result.errorField = 'level_1';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      }\n\n\n      if (row.level_2) {\n        if (typeof row.level_2 !== 'string') {\n          result.errorID = row.entity_id;\n          result.errorField = 'level_2';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.level_2 = '';\n      }\n\n      if (row.level_3) {\n        if (typeof row.level_3 !== 'string') {\n          result.errorID = row.entity_id;\n          result.errorField = 'level_3';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.level_3 = '';\n      }\n\n\n      if (row.level_4) {\n        if (typeof row.level_4 !== 'string') {\n          result.errorID = row.entity_id;\n          result.errorField = 'level_4';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.level_4 = '';\n      }\n\n\n      if (row.level_5) {\n        if (typeof row.level_5 !== 'string') {\n          result.errorID = row.entity_id;\n          result.errorField = 'level_5';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.level_5 = '';\n      }\n\n\n      if (row.source_system) {\n        if (typeof row.level_5 !== 'string') {\n          result.errorID = row.entity_id;\n          result.errorField = 'source_system';\n          result.errorReason = 'Not a String';\n          reject(result);\n        }\n      } else {\n        row.source_system = '';\n      }\n\n      finalObject.push(row);\n      resolve(row);\n    });\n  });\n\n  return await Promise.all(request);\n};\n\nmodule.exports = {\n  validateFlatHierarchies\n};\n\n"]}