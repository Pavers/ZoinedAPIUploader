{"version":3,"sources":["../../lib/zoined.js"],"names":["zKey","constants","require","supplierValidation","salesValidation","campaignValidation","departmentValidation","campaignProductValidation","budgetValidation","productValidation","customerValidation","organisationValidation","salesPersonsValidation","currencyRateValidation","inventorySnapshotsValidation","inventoryTransactionsValidation","flatHierachiesValidation","productHierachiesValidation","rebateCodesValidation","salesOrdersValidation","salesSummaryValidation","visitorValidation","zoinedPost","exports","init","apiKey","sendData","dataType","dataValue","postData","dataPost","postType","SUPPLIERS","SALES","CAMPAIGN","CAMPAIGNPRODUCTS","DEPARTMENTS","BUDGETS","PRODUCTS","CUSTOMERS","ORGANISATIONS","SALESPERSON","CURRENCYRATES","INVENTORYSNAPSHOTS","INVENTORYTRANSACTIONS","FLATHIERACHIES","PRODUCTHIERACHIES","REBATECODES","SALESORDERS","SALESSUMMARY","VISITORS","validateSupplier","then","returnData","catch","errorData","validateSalesTransactions","validateCampaign","validateCampaignProducts","validateDepartment","validateBudgets","validateProducts","validateCustomers","validateOrganisations","validateSalesPerson","currencyValidation","validateInventorySnapshots","validateInventoryTransactions","validateFlatHierarchies","validateProductHierachies","validateRebateCodes","validateSalesOrders","validateSalesSummary","validateVisitors"],"mappings":"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","file":"zoined.js","sourcesContent":["/* eslint-disable consistent-return */\n'use strict';\n\nlet zKey = '';\n\nconst constants = require('./constants');\nconst supplierValidation = require('./validation/supplier');\nconst salesValidation = require('./validation/salestransactions');\nconst campaignValidation = require('./validation/campaigns');\nconst departmentValidation = require('./validation/departments');\nconst campaignProductValidation = require('./validation/campaignproducts');\nconst budgetValidation = require('./validation/budgets');\nconst productValidation = require('./validation/products');\nconst customerValidation = require('./validation/customer');\nconst organisationValidation = require('./validation/organisations');\nconst salesPersonsValidation = require('./validation/salesperson');\nconst currencyRateValidation = require('./validation/currencyrates');\nconst inventorySnapshotsValidation = require('./validation/inventorysnapshots');\nconst inventoryTransactionsValidation = require('./validation/inventorytransactions');\nconst flatHierachiesValidation = require('./validation/flathierarchies');\nconst productHierachiesValidation = require('./validation/producthierachies');\nconst rebateCodesValidation = require('./validation/rebatecodes');\nconst salesOrdersValidation = require('./validation/salesorders');\nconst salesSummaryValidation = require('./validation/salessummary');\nconst visitorValidation = require('./validation/visitors');\nconst zoinedPost = require('./doPost');\n\nexports.init = (apiKey) => {\n  zKey = apiKey;\n};\n\n\nconst sendData = async(dataType, dataValue) => {\n  return await zoinedPost.postData(zKey, dataType, dataValue);\n};\n\n\nexports.dataPost = async(postData, postType) => {\n\n  switch (postType) {\n  case constants.SUPPLIERS:\n    return await supplierValidation.validateSupplier(postData)\n      .then(returnData => {\n        return sendData(constants.SUPPLIERS, returnData);\n      })\n      .catch(errorData => {\n        return errorData;\n      });\n  case constants.SALES:\n    return await salesValidation.validateSalesTransactions(postData)\n      .then(returnData => {\n        return sendData(constants.SALES, returnData);\n      });\n  case constants.CAMPAIGN:\n    return await campaignValidation.validateCampaign(postData)\n      .then(returnData => {\n        return sendData(constants.CAMPAIGN, returnData);\n      });\n  case constants.CAMPAIGNPRODUCTS:\n    return await campaignProductValidation.validateCampaignProducts(postData)\n      .then(returnData => {\n        return sendData(constants.CAMPAIGNPRODUCTS, returnData);\n      });\n  case constants.DEPARTMENTS:\n    return await departmentValidation.validateDepartment(postData)\n      .then(returnData => {\n        return sendData(constants.DEPARTMENTS, returnData);\n      });\n\n  case constants.BUDGETS:\n    return await budgetValidation.validateBudgets(postData)\n      .then(returnData => {\n        return sendData(constants.BUDGETS, returnData);\n      });\n\n  case constants.PRODUCTS:\n    return await productValidation.validateProducts(postData)\n      .then(returnData => {\n        return sendData(constants.PRODUCTS, returnData);\n      });\n  case constants.CUSTOMERS:\n    return await customerValidation.validateCustomers(postData)\n      .then(returnData => {\n        return sendData(constants.CUSTOMERS, returnData);\n      });\n  case constants.ORGANISATIONS:\n    return await organisationValidation.validateOrganisations(postData)\n      .then(returnData => {\n        return sendData(constants.ORGANISATIONS, returnData);\n      });\n\n  case constants.SALESPERSON:\n    return await salesPersonsValidation.validateSalesPerson(postData)\n      .then(returnData => {\n        return sendData(constants.SALESPERSON, returnData);\n      });\n\n  case constants.CURRENCYRATES:\n    return await currencyRateValidation.currencyValidation(postData)\n      .then(returnData => {\n        return sendData(constants.CURRENCYRATES, returnData);\n      });\n\n  case constants.INVENTORYSNAPSHOTS:\n    return await inventorySnapshotsValidation.validateInventorySnapshots(postData)\n      .then(returnData => {\n        return sendData(constants.INVENTORYSNAPSHOTS, returnData);\n      });\n\n  case constants.INVENTORYTRANSACTIONS:\n    return await inventoryTransactionsValidation.validateInventoryTransactions(postData)\n      .then(returnData => {\n        return sendData(constants.INVENTORYTRANSACTIONS, returnData);\n      });\n\n  case constants.FLATHIERACHIES:\n    return await flatHierachiesValidation.validateFlatHierarchies(postData)\n      .then(returnData => {\n        return sendData(constants.FLATHIERACHIES, returnData);\n      });\n\n  case constants.PRODUCTHIERACHIES:\n    return await productHierachiesValidation.validateProductHierachies(postData)\n      .then(returnData => {\n        return sendData(constants.PRODUCTHIERACHIES, returnData);\n      });\n\n  case constants.REBATECODES:\n    return await rebateCodesValidation.validateRebateCodes(postData)\n      .then(returnData => {\n        return sendData(constants.REBATECODES, returnData);\n      });\n\n  case constants.SALESORDERS:\n    return await salesOrdersValidation.validateSalesOrders(postData)\n      .then(returnData => {\n        return sendData(constants.SALESORDERS, returnData);\n      });\n\n  case constants.SALESSUMMARY:\n    return await salesSummaryValidation.validateSalesSummary(postData)\n      .then(returnData => {\n        return sendData(constants.SALESSUMMARY, returnData);\n      });\n\n\n  case constants.VISITORS:\n    return await visitorValidation.validateVisitors(postData)\n      .then(returnData => {\n        return sendData(constants.VISITORS, returnData);\n      });\n  }\n};\n\n"]}